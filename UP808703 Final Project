--loads into iSQL
isql -s 127.0.0.1 -u SYS -p MANAGER

--Shows all tbales
SELECT * FROM TAB

--Enable timing so that the query time is shown
SET TIMING ON

--Expected inputs
roundedFinalScore, maxPosScore, maxNegScore, reddit comment id

--Create Temporary Table:
CREATE TABLE SentimentData (
  FinalScore DECIMAL(6,4),
  maxPosScore DECIMAL(5,3),
  maxNegScore DECIMAL(5,3),
  commentID char(10)
);

--Create Final Tables
CREATE TABLE Positive (
  maxPosScore DECIMAL(9,3),
  PRIMARY KEY (maxPosScore)
);

CREATE TABLE Negative (
  maxNegScore DECIMAL(9,3),
  PRIMARY KEY (maxNegScore)
);

CREATE TABLE CommentScore(
  FinalScore DECIMAL(6,4),
  maxPosScore DECIMAL(5,3),
  maxNegScore DECIMAL(5,3),
  commentID char(10),
  PRIMARY KEY (commentID),
  FOREIGN KEY (maxPosScore) REFERENCES Positive(maxPosScore),
  FOREIGN KEY (maxNegScore) REFERENCES Negative(maxNegScore)
);

--copy data from temp table into database
INSERT INTO Positive (maxPosScore)
SELECT DISTINCT maxPosScore FROM SentimentData;

INSERT INTO Negative (maxNegScore)
SELECT DISTINCT maxNegScore FROM SentimentData;

INSERT INTO CommentScore (commentID, FinalScore, maxPosScore, maxNegScore)
SELECT DISTINCT commentID, FinalScore, maxPosScore, maxNegScore FROM SentimentData;

--SQL statements
--1)Simple Select Statement using AVG
SELECT AVG (FinalScore) AS 'Average Score'
FROM CommentScore;

--2) Select statement refering to 2 tables using COUNT
SELECT COUNT (CommentScore.FinalScore) AS 'Most Positive Comments'
FROM CommentScore
CommentScore INNER JOIN Positive ON Positive.maxPosScore=CommentScore.maxPosScore
WHERE Positive.maxPosScore >= 1;

--3) Select statement refering to 3 tables using COUNT
SELECT COUNT (CommentScore.commentID) AS 'Number of Controversial Comments'
FROM CommentScore
CommentScore INNER JOIN Positive ON Positive.maxPosScore=CommentScore.maxPosScore
INNER JOIN Negative ON Negative.maxNegScore=CommentScore.maxNegScore
WHERE Positive.maxPosScore >= 1 OR Negative.maxNegScore <= -1;

--4) Insert into table as a PRIMARY KEY
INSERT INTO Positive (maxPosScore) VALUES (1.01);

--5) Insert into a table using FOREIGN KEY
INSERT INTO CommentScore (FinalScore, maxPosScore, maxNegScore, commentID)
VALUES (0, 0, 0, 'zzzzzzzzz');

--6) Delete a row that is a PRIMARY KEY
DELETE FROM Positive
WHERE maxPosScore = 1.01;

--7) Delete a row that contains FOREIGN KEYS
DELETE FROM CommentScore
WHERE commentID = 'zzzzzzzzz';
--(9 z's)

--8)update query on
UPDATE CommentScore
SET commentID = 'c2377'
WHERE commentID = 'xxxxxxxxx';

--9) CREATE and Polpulate a new table with the data from Dec. 2005
CREATE TABLE copyTest(
  FinalScore DECIMAL(6,4),
  maxPosScore DECIMAL(5,3),
  maxNegScore DECIMAL(5,3),
  commentID char(10),
  PRIMARY KEY (commentID),
  FOREIGN KEY (maxPosScore) REFERENCES Positive(maxPosScore),
  FOREIGN KEY (maxNegScore) REFERENCES Negative(maxNegScore)
);

INSERT INTO copyTest (FinalScore, maxPosScore, maxNegScore, commentID)
SELECT FinalScore, maxPosScore, maxNegScore, commentID
FROM CommentScore
WHERE commentID LIKE 'c%';

--10) DROP a populated table
DROP TABLE copyTest;

--Iloader Commands
iloader formout -S localhost -U SYS -p MANAGER -T SentimentData -f /home/cory/SentimentData.fmt
cat /home/cory/SentimentData.fmt
iloader in -S localhost -U SYS -p MANAGER -f SentimentData.fmt -d /home/cory/SentimentData/2005/RC_2005-12.sentiment -t %t;

--Python to create iloader commands:
def createInputCommands():
    year = 6

    while year <10:
        month = 1
        while month <= 12:
            print("iloader in -S localhost -U SYS -p MANAGER -f SentimentData.fmt -d /home/cory/SentimentData/200"+str(year)+"/RC_200"+str(year)+"-"+str(month)+".sentiment -t %t;")
            month+=1
        year+=1

    while 10<=year<=17:
        month = 1
        while month <= 12:
            print("iloader in -S localhost -U SYS -p MANAGER -f SentimentData.fmt -d /home/cory/SentimentData/20"+str(year)+"/RC_20"+str(year)+"-"+str(month)+".sentiment -t %t;")
            month+=1
        year+=1
